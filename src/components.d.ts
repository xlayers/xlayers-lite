/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface XLayers {
    'mode': "2d" | "3d";
    'src'?: string;
    'wireframe': boolean;
    'zoom': number;
  }
  interface XLayersCanvas {
    'data': SketchMSData;
    'mode': "2d" | "3d";
    'wireframe': boolean;
    'zoom': number;
  }
  interface XLayersContainer {
    'data': SketchMSData;
    'mode': "2d" | "3d";
    'wireframe': boolean;
    'zoom': number;
  }
  interface XLayersLayer {
    'data': SketchMSData;
    'depth': number;
    'layer': SketchMSLayer;
    'mode': "2d" | "3d";
    'wireframe': boolean;
  }
  interface XLayersPage {
    'data': SketchMSData;
    'mode': "2d" | "3d";
    'page': SketchMSPage;
    'wireframe': boolean;
  }
  interface XLayersUpload {}
}

declare global {


  interface HTMLXLayersElement extends Components.XLayers, HTMLStencilElement {}
  var HTMLXLayersElement: {
    prototype: HTMLXLayersElement;
    new (): HTMLXLayersElement;
  };

  interface HTMLXLayersCanvasElement extends Components.XLayersCanvas, HTMLStencilElement {}
  var HTMLXLayersCanvasElement: {
    prototype: HTMLXLayersCanvasElement;
    new (): HTMLXLayersCanvasElement;
  };

  interface HTMLXLayersContainerElement extends Components.XLayersContainer, HTMLStencilElement {}
  var HTMLXLayersContainerElement: {
    prototype: HTMLXLayersContainerElement;
    new (): HTMLXLayersContainerElement;
  };

  interface HTMLXLayersLayerElement extends Components.XLayersLayer, HTMLStencilElement {}
  var HTMLXLayersLayerElement: {
    prototype: HTMLXLayersLayerElement;
    new (): HTMLXLayersLayerElement;
  };

  interface HTMLXLayersPageElement extends Components.XLayersPage, HTMLStencilElement {}
  var HTMLXLayersPageElement: {
    prototype: HTMLXLayersPageElement;
    new (): HTMLXLayersPageElement;
  };

  interface HTMLXLayersUploadElement extends Components.XLayersUpload, HTMLStencilElement {}
  var HTMLXLayersUploadElement: {
    prototype: HTMLXLayersUploadElement;
    new (): HTMLXLayersUploadElement;
  };
  interface HTMLElementTagNameMap {
    'x-layers': HTMLXLayersElement;
    'x-layers-canvas': HTMLXLayersCanvasElement;
    'x-layers-container': HTMLXLayersContainerElement;
    'x-layers-layer': HTMLXLayersLayerElement;
    'x-layers-page': HTMLXLayersPageElement;
    'x-layers-upload': HTMLXLayersUploadElement;
  }
}

declare namespace LocalJSX {
  interface XLayers extends JSXBase.HTMLAttributes<HTMLXLayersElement> {
    'mode'?: "2d" | "3d";
    'src'?: string;
    'wireframe'?: boolean;
    'zoom'?: number;
  }
  interface XLayersCanvas extends JSXBase.HTMLAttributes<HTMLXLayersCanvasElement> {
    'data'?: SketchMSData;
    'mode'?: "2d" | "3d";
    'wireframe'?: boolean;
    'zoom'?: number;
  }
  interface XLayersContainer extends JSXBase.HTMLAttributes<HTMLXLayersContainerElement> {
    'data'?: SketchMSData;
    'mode'?: "2d" | "3d";
    'wireframe'?: boolean;
    'zoom'?: number;
  }
  interface XLayersLayer extends JSXBase.HTMLAttributes<HTMLXLayersLayerElement> {
    'data'?: SketchMSData;
    'depth'?: number;
    'layer'?: SketchMSLayer;
    'mode'?: "2d" | "3d";
    'wireframe'?: boolean;
  }
  interface XLayersPage extends JSXBase.HTMLAttributes<HTMLXLayersPageElement> {
    'data'?: SketchMSData;
    'mode'?: "2d" | "3d";
    'page'?: SketchMSPage;
    'wireframe'?: boolean;
  }
  interface XLayersUpload extends JSXBase.HTMLAttributes<HTMLXLayersUploadElement> {
    'onFileUploaded'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'x-layers': XLayers;
    'x-layers-canvas': XLayersCanvas;
    'x-layers-container': XLayersContainer;
    'x-layers-layer': XLayersLayer;
    'x-layers-page': XLayersPage;
    'x-layers-upload': XLayersUpload;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


